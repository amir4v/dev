version: "3"

services:

  backend:
    build: .
    command: /app/run.sh
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      - mongodb
      - postgres
      - mysql_db
      - redis
      - nginx
  
  worker:
    build: .
    command: celery -A middlevel worker -l INFO
    volumes:
      - .:/app
      - ./:/app
      - ./media/images:/app/media/images
    depends_on:
      - backend
  
  redis:
    image: redis
    ports:
      - 6379:6379
    # depends_on:
    #   - backend
    volumes:
      - .:/app
  
  nginx:
    image: nginx
    container_name: nginx
    ports: 
      - 80:80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - .:/app
      - ./static:/app/static
    # depends_on:
    #   - backend
    #   - worker
  
  smtp4dev:
      image: rnwood/smtp4dev:v3
      restart: always
      ports:
        # Change the number before : to the port the web interface should be accessible on
        - 5000:80
        # Change the number before : to the port the SMTP server should be accessible on
        - 25:25
        # Change the number before : to the port the IMAP server should be accessible on
        - 143:143
      environment:
        - ServerOptions__HostName=smtp4dev
  
  postgres:
    image: postgres:15-alpine
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    #
    # Then go to bash/sh mode of this container and create a (db_postgres) database.
    #
    # 'ENGINE': 'django.db.backends.postgresql',
    # 'NAME': 'db_postgres', # must create
    # 'USER': 'postgres', # default
    # 'PASSWORD': '',
    # 'HOST': 'postgres',
    # 'PORT': 5432, #default port you don't need to mention in docker-compose
    #
    # Change the current user in linux (like login): su username
    #
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      # - POSTGRES_DB=db_postgres
      # - POSTGRES_USER=postgres
      # - POSTGRES_PASSWORD=
  
  mysql_db:
    container_name: mysql_db
    image: mysql:8
    ports:
      - 3307:3306
    environment:
      - MYSQL_DATABASE=db_mysql
      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./data/mysql:/var/lib/mysql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  
  mongodb:
    image: mongo
    # restart: always
    volumes:
      - ./data/mongo:/data/db
      - ./data/mongo/init-db:/docker-entrypoint-initdb.d
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      MONGO_INITDB_DATABASE: default_mongo
    ports:
      - 27017:27017

volumes:
  .:
